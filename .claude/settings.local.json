{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(npm start)",
      "Bash(npx ts-node:*)",
      "Bash(ls:*)",
      "Bash(dir:*)",
      "Bash(echo:*)",
      "Bash(cat:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(npm uninstall:*)",
      "Bash(mv:*)",
      "Bash(npm run monitor:tx:*)",
      "Bash(grep:*)",
      "Bash(jq:*)",
      "Bash(sed:*)",
      "Bash(touch:*)",
      "Bash(npm run build:*)",
      "Bash(npm run monitor:account:*)",
      "Bash(node:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git rm:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "WebFetch(domain:docs.shyft.to)",
      "WebFetch(domain:letsbonk.fun)",
      "Bash(git reset:*)",
      "Bash(git checkout:*)",
      "Bash(npm run:*)",
      "Bash(npx tsc:*)",
      "WebFetch(domain:translator.shyft.to)",
      "WebFetch(domain:solscan.io)",
      "Bash(npm run:*)",
      "Bash(rm:*)",
      "WebFetch(domain:www.helius.dev)",
      "Bash(psql:*)",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -f src/database/migrations/002_create_pools.sql)",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -c \"\\dt pools\")",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -c \"\\d pools\")",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -c \"\\di idx_pools*\")",
      "Bash(timeout 30 npm run rlmonitor:trans)",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -f src/database/test-session2-complete.sql)",
      "Bash(timeout 5 npm run pfmonitor:account)",
      "Bash(del srcmonitorspumpfunpumpfun-monitor-new-token-mint.ts)",
      "Bash(taskkill:*)",
      "WebFetch(domain:extremelysunnyyk.medium.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.raydium.io)",
      "Bash(del srcmonitorspumpfunpumpfun-monitor-new-token-mint.ts)",
      "Bash(explorer:*)",
      "Bash(npx http-server:*)",
      "Bash(git restore:*)",
      "Bash(start index.html)",
      "WebFetch(domain:solana.stackexchange.com)",
      "WebFetch(domain:dexscreener.com)",
      "Bash(move srcservicessol-price-service.ts srcservicesprice)",
      "Bash(cmd /c move:*)",
      "Bash(del:*)",
      "Bash(powershell:*)",
      "Bash(curl:*)",
      "Bash(start http://localhost:3000)",
      "Bash(del:*)",
      "WebFetch(domain:docs.pyth.network)",
      "WebFetch(domain:www.pyth.network)",
      "WebFetch(domain:insights.pyth.network)",
      "Bash(tasklist:*)",
      "Bash(find:*)",
      "Bash(move:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(cmd:*)",
      "Bash(rd:*)",
      "Bash(if exist node_modules\\.cache rmdir /s /q node_modules\\.cache)",
      "Bash(timeout:*)",
      "Bash(SOL_PRICE_UPDATE_INTERVAL=1000 SOL_PRICE_CACHE_TIME=800 timeout 5 npm run sol-price:updater)",
      "Bash(git check-ignore:*)",
      "Bash(git check-ignore:*)",
      "Bash(timeout:*)",
      "Bash(git pull:*)",
      "Bash(wmic process where \"name='node.exe'\" get ProcessId,CommandLine:*)",
      "Bash(wmic process where:*)",
      "WebFetch(domain:raydium.io)",
      "Bash(wmic process where \"name='node.exe'\" get ProcessId,CommandLine:*)",
      "Bash(diff:*)",
      "WebFetch(domain:docs.bitquery.io)",
      "Bash(pg_ctl status:*)",
      "Bash(sc query:*)",
      "Bash(net start:*)",
      "Bash(wmic:*)",
      "Bash(copy raydium-launchpad-account-monitor.ts raydium-launchpad-account-monitor.ts.backup)",
      "Bash(copy:*)",
      "Bash(npm test)",
      "Bash(npx tsx:*)",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -f src/database/migrations/014_create_holder_tracking_tables.sql)",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -f src/database/migrations/014_create_holder_tracking_tables_fixed.sql)",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -c \"\\dt holder_*\")",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -c \"\\dt token_holders\")",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -c \"\\dt wallet_analysis_cache\")",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -c \"\\d holder_scores\")",
      "WebFetch(domain:docs.helius.dev)",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -f src/database/migrations/015_add_frozen_score_field.sql)",
      "Bash(PGPASSWORD=password123 psql -h localhost -p 5433 -U postgres -d megatron_v2 -c \"SELECT COUNT(*) FROM token_holders\")",
      "Bash(PGPASSWORD=password123 psql:*)",
      "Bash(net stop:*)"
    ],
    "deny": []
  }
}